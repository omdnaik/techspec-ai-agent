import dev.langchain4j.service.TokenStreamCallback;

import java.util.concurrent.CountDownLatch;

public class StreamingCallback implements TokenStreamCallback {

    private final StringBuilder builder = new StringBuilder();
    private final CountDownLatch latch = new CountDownLatch(1);

    @Override
    public void onNext(String token) {
        builder.append(token);
    }

    @Override
    public void onComplete() {
        latch.countDown(); // Unblock the main thread
    }

    @Override
    public void onError(Throwable error) {
        System.err.println("Error during stream: " + error.getMessage());
        latch.countDown(); // Also unblock on error
    }

    public String awaitAndGetOutput() {
        try {
            latch.await(); // Blocks until onComplete() is called
        } catch (InterruptedException e) {
            Thread.currentThread().interrupt();
        }
        return builder.toString();
    }
}
